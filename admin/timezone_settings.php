<?php
session_start();
if (!isset($_SESSION["admin"])) {
    header("Location: login.php");
    exit;
}
require_once "../api/db.php"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

// –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
$settings = $db->query("SELECT timezone FROM settings LIMIT 1")->fetch(PDO::FETCH_ASSOC);
$settings = $settings ?: []; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ $settings —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º
?>
<h3>üìÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞</h3>
<form id="timezoneSettingsForm" method="POST" action="save.php" class="mb-3">
    <div id="main">
        <div class="mb-3">
            <label for="timezone" class="form-label">–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å:</label>
            <input type="text" class="form-control" name="timezone" id="timezone" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, Europe/Moscow" value="<?= htmlspecialchars($settings['timezone'] ?? 'UTC') ?>">
            <div class="form-text">–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, Europe/Moscow, America/New_York, UTC). <a href="https://www.php.net/manual/ru/timezones.php" target="_blank">–°–ø–∏—Å–æ–∫ —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤</a>.</div>
        </div>
    </div> <button type="submit" class="btn btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
    <div id="saveStatus" class="mt-3"></div>
</form>

<script>
// –°–ö–†–ò–ü–¢ –î–õ–Ø AJAX-–°–û–•–†–ê–ù–ï–ù–ò–Ø
document.addEventListener("DOMContentLoaded", function() {
  const saveForm = document.getElementById('timezoneSettingsForm'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID —Ñ–æ—Ä–º—ã
  const saveButton = saveForm.querySelector('button[type="submit"]');
  const saveStatusDiv = document.getElementById('saveStatus');

   if (!saveForm || !saveButton || !saveStatusDiv) {
      console.error("Timezone settings form elements not found!");
      return;
  }

  saveForm.addEventListener('submit', function(event) {
    event.preventDefault();

    saveButton.disabled = true;
    saveStatusDiv.innerHTML = '<span class="text-info">–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...</span>';
    saveStatusDiv.className = 'mt-3 text-info';

    const formData = new FormData(saveForm);
    const saveUrl = saveForm.getAttribute('action');

    fetch(saveUrl, {
      method: 'POST',
      body: formData
    })
    .then(response => {
      if (!response.ok) {
        return response.text().then(text => {
          throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞: ' + response.status + ' ' + response.statusText + ' - ' + text);
        });
      }
      const contentType = response.headers.get('content-type');
      if (contentType && contentType.includes('application/json')) {
        return response.json();
      } else {
        return response.text().then(text => {
          throw new Error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞: ' + text);
        });
      }
    })
    .then(data => {
      if (data.success) {
        saveStatusDiv.innerHTML = data.message || '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!';
        saveStatusDiv.className = 'mt-3 text-success';
      } else {
        saveStatusDiv.innerHTML = '–û—à–∏–±–∫–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
        saveStatusDiv.className = 'mt-3 text-danger';
      }
    })
    .catch(error => {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
      saveStatusDiv.innerHTML = '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + error.message;
      saveStatusDiv.className = 'mt-3 text-danger';
    })
    .finally(() => {
      saveButton.disabled = false;
    });
  });
});
</script>